services:
  kurtosis-api:
    image: parmenidesxyz/kurtosis-backend:latest
    container_name: kurtosis-api
    ports:
      - "${PORT:-8001}:8001"
    environment:
      - PORT=8001
      - HOST=0.0.0.0
      - ENV=${ENV:-production}
      - CORS_ORIGINS=${CORS_ORIGINS:-*}
      # Blockchain config
      - SEI_RPC_URL=${SEI_RPC_URL}
      - CHAIN_ID=${CHAIN_ID}
      # Contract addresses
      - MARKET_ADDRESS=${MARKET_ADDRESS}
      - AGENT_FACTORY_ADDRESS=${AGENT_FACTORY_ADDRESS}
      - POOL_MANAGER_ADDRESS=${POOL_MANAGER_ADDRESS}
      - ROUTER_ADDRESS=${ROUTER_ADDRESS}
      - MOCK_USDC_ADDRESS=${MOCK_USDC_ADDRESS}
      - RESOLVER_ADDRESS=${RESOLVER_ADDRESS}
      # Bonding contracts
      - MOCK_AID_ADDRESS=${MOCK_AID_ADDRESS}
      - WSEI_ADDRESS=${WSEI_ADDRESS}
      - FFACTORY_ADDRESS=${FFACTORY_ADDRESS}
      - FROUTER_ADDRESS=${FROUTER_ADDRESS}
      - BONDING_ADDRESS=${BONDING_ADDRESS}
      # Private keys and API keys
      - MASTER_PRIVATE_KEY=${MASTER_PRIVATE_KEY}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY}
      - ALLORA_API_KEY=${ALLORA_API_KEY}
      # Trading config
      - NUM_TRADERS=${NUM_TRADERS:-20}
      - NUM_PROPOSAL_AGENTS=${NUM_PROPOSAL_AGENTS:-10}
      - FAUCET_AMOUNT=${FAUCET_AMOUNT:-10000}
    volumes:
      - kurtosis-data:/app/data
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "python", "-c", "import requests; requests.get('http://localhost:8001/health')"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 5s

volumes:
  kurtosis-data: